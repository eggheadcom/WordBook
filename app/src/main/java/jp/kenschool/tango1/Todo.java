package jp.kenschool.tango1;

public class Todo {

    /**
     *
     * INVISIBLE系のボタンを対処
     *   全削除ボタン　色々と検討
     *
     * クラス名のリファクタリング　（特にテストとクエスチョン、カード３種）

     *
     * メインActivityのボタンナンバリングを整える
     *
     *
     *
     * カテゴリの最大値を１０までとかに
     *
     *
     * ArrayList型にしているやつを可能なら、左辺だけListに変更
     *
     *
     * 各入力チェックにおける空白の扱い
     *
     * ユーザー名とパスに使用可能な文字列が現在英字のみなので、あとで修正
     *
     * パスワードは、隠せるようにする
     *
     *
     * ログインアクティビティ作る
     * サインアップ時は登録ボタン、サインイン時はログインボタン
     *
     *
     * 【追加機能】
     * ログイン機能
     * 4択で答える出題方式
     * CardViewの学習モード https://qiita.com/yukiyamadajp/items/ec8b6c1ff0c9d74c2a53*
     * ハンバーガーアイコンからのメニュー（歯車設定の中にINFOなど）
     * 通知機能（時間指定）
     * 進捗（何問目）をゲージで表示
     * SNS連携
     *
     * リサイクラービューを利用した単語編集画面（長押しで並べ替え、スワイプで削除）
     *
     * ユーザーが選べるカラータイプ
     * 検索窓を虫眼鏡アイコン（他もアイコン利用してすっきりと）
     *
     *
     * 【余裕あればやる】
     * 正解結果のパーセンテージに応じて★ゲージ
     * バインドに変更（初期レコード挿入、削除レコードfor文）
     * 拡張性などを考えたときに、何か所も書き換えなければいけない状態からもっと良いものも考える
     * トランザクションについて検討
     * 入力チェックをもう少し共通化してまとめられるならやる
     *
     *
     * 【補足】
     * try catch は検査例外ではないから付けなくてもOK　
     * SQL系で問題が起きていることが多いから、書いておいた方が動作確認には良い
     *　登録の外部キーの有効化　INSERT前に入れるとかいうやつ　PRAGMA foreign_keys=true;
     *
     *
     *
     *
     */

    /*
       デバッグ用として利用  日時指定データ挿入
          String insert =
                  "INSERT INTO " + TABLE_WORDS +
                          " (jpn, eng, created_by ,cate_id, user_id)" + " VALUES" +
                          " ('z', 'm', '2019-10-15', 1, 1)";
          boolean b = mdb.write(insert);
          if(b) tvError.setText("Yes");
          else tvError.setText("Noooo");
     */


}
